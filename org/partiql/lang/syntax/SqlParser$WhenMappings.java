/*
 * Decompiled with CFR 0.153-SNAPSHOT (d6f6758-dirty).
 */
package org.partiql.lang.syntax;

import kotlin.Metadata;
import org.partiql.lang.syntax.SqlParser;
import org.partiql.lang.syntax.TokenType;

@Metadata(mv={1, 1, 16}, bv={1, 0, 3}, k=3)
public final class SqlParser$WhenMappings {
    public static final /* synthetic */ int[] $EnumSwitchMapping$0;
    public static final /* synthetic */ int[] $EnumSwitchMapping$1;
    public static final /* synthetic */ int[] $EnumSwitchMapping$2;
    public static final /* synthetic */ int[] $EnumSwitchMapping$3;
    public static final /* synthetic */ int[] $EnumSwitchMapping$4;
    public static final /* synthetic */ int[] $EnumSwitchMapping$5;
    public static final /* synthetic */ int[] $EnumSwitchMapping$6;
    public static final /* synthetic */ int[] $EnumSwitchMapping$7;
    public static final /* synthetic */ int[] $EnumSwitchMapping$8;
    public static final /* synthetic */ int[] $EnumSwitchMapping$9;
    public static final /* synthetic */ int[] $EnumSwitchMapping$10;
    public static final /* synthetic */ int[] $EnumSwitchMapping$11;
    public static final /* synthetic */ int[] $EnumSwitchMapping$12;
    public static final /* synthetic */ int[] $EnumSwitchMapping$13;
    public static final /* synthetic */ int[] $EnumSwitchMapping$14;
    public static final /* synthetic */ int[] $EnumSwitchMapping$15;
    public static final /* synthetic */ int[] $EnumSwitchMapping$16;
    public static final /* synthetic */ int[] $EnumSwitchMapping$17;
    public static final /* synthetic */ int[] $EnumSwitchMapping$18;
    public static final /* synthetic */ int[] $EnumSwitchMapping$19;
    public static final /* synthetic */ int[] $EnumSwitchMapping$20;
    public static final /* synthetic */ int[] $EnumSwitchMapping$21;
    public static final /* synthetic */ int[] $EnumSwitchMapping$22;
    public static final /* synthetic */ int[] $EnumSwitchMapping$23;
    public static final /* synthetic */ int[] $EnumSwitchMapping$24;
    public static final /* synthetic */ int[] $EnumSwitchMapping$25;
    public static final /* synthetic */ int[] $EnumSwitchMapping$26;
    public static final /* synthetic */ int[] $EnumSwitchMapping$27;
    public static final /* synthetic */ int[] $EnumSwitchMapping$28;
    public static final /* synthetic */ int[] $EnumSwitchMapping$29;
    public static final /* synthetic */ int[] $EnumSwitchMapping$30;
    public static final /* synthetic */ int[] $EnumSwitchMapping$31;
    public static final /* synthetic */ int[] $EnumSwitchMapping$32;
    public static final /* synthetic */ int[] $EnumSwitchMapping$33;
    public static final /* synthetic */ int[] $EnumSwitchMapping$34;
    public static final /* synthetic */ int[] $EnumSwitchMapping$35;
    public static final /* synthetic */ int[] $EnumSwitchMapping$36;
    public static final /* synthetic */ int[] $EnumSwitchMapping$37;
    public static final /* synthetic */ int[] $EnumSwitchMapping$38;
    public static final /* synthetic */ int[] $EnumSwitchMapping$39;
    public static final /* synthetic */ int[] $EnumSwitchMapping$40;
    public static final /* synthetic */ int[] $EnumSwitchMapping$41;
    public static final /* synthetic */ int[] $EnumSwitchMapping$42;
    public static final /* synthetic */ int[] $EnumSwitchMapping$43;
    public static final /* synthetic */ int[] $EnumSwitchMapping$44;
    public static final /* synthetic */ int[] $EnumSwitchMapping$45;

    static {
        $EnumSwitchMapping$0 = new int[TokenType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$0[TokenType.LITERAL.ordinal()] = 1;
        SqlParser$WhenMappings.$EnumSwitchMapping$0[TokenType.ION_LITERAL.ordinal()] = 2;
        SqlParser$WhenMappings.$EnumSwitchMapping$0[TokenType.IDENTIFIER.ordinal()] = 3;
        SqlParser$WhenMappings.$EnumSwitchMapping$0[TokenType.QUOTED_IDENTIFIER.ordinal()] = 4;
        $EnumSwitchMapping$1 = new int[TokenType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$1[TokenType.LITERAL.ordinal()] = 1;
        SqlParser$WhenMappings.$EnumSwitchMapping$1[TokenType.NULL.ordinal()] = 2;
        SqlParser$WhenMappings.$EnumSwitchMapping$1[TokenType.TRIM_SPECIFICATION.ordinal()] = 3;
        SqlParser$WhenMappings.$EnumSwitchMapping$1[TokenType.DATE_PART.ordinal()] = 4;
        SqlParser$WhenMappings.$EnumSwitchMapping$1[TokenType.ION_LITERAL.ordinal()] = 5;
        SqlParser$WhenMappings.$EnumSwitchMapping$1[TokenType.MISSING.ordinal()] = 6;
        SqlParser$WhenMappings.$EnumSwitchMapping$1[TokenType.QUOTED_IDENTIFIER.ordinal()] = 7;
        SqlParser$WhenMappings.$EnumSwitchMapping$1[TokenType.IDENTIFIER.ordinal()] = 8;
        $EnumSwitchMapping$2 = new int[TokenType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$2[TokenType.QUOTED_IDENTIFIER.ordinal()] = 1;
        SqlParser$WhenMappings.$EnumSwitchMapping$2[TokenType.IDENTIFIER.ordinal()] = 2;
        $EnumSwitchMapping$3 = new int[SqlParser.ParseType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$3[SqlParser.ParseType.CASE_SENSITIVE_ATOM.ordinal()] = 1;
        SqlParser$WhenMappings.$EnumSwitchMapping$3[SqlParser.ParseType.CASE_INSENSITIVE_ATOM.ordinal()] = 2;
        SqlParser$WhenMappings.$EnumSwitchMapping$3[SqlParser.ParseType.PATH_UNPIVOT.ordinal()] = 3;
        $EnumSwitchMapping$4 = new int[SqlParser.ParseType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$4[SqlParser.ParseType.PATH_DOT.ordinal()] = 1;
        SqlParser$WhenMappings.$EnumSwitchMapping$4[SqlParser.ParseType.PATH_SQB.ordinal()] = 2;
        $EnumSwitchMapping$5 = new int[SqlParser.ParseType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$5[SqlParser.ParseType.WHEN.ordinal()] = 1;
        SqlParser$WhenMappings.$EnumSwitchMapping$5[SqlParser.ParseType.ELSE.ordinal()] = 2;
        $EnumSwitchMapping$6 = new int[SqlParser.ParseType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$6[SqlParser.ParseType.WHEN.ordinal()] = 1;
        SqlParser$WhenMappings.$EnumSwitchMapping$6[SqlParser.ParseType.ELSE.ordinal()] = 2;
        $EnumSwitchMapping$7 = new int[SqlParser.ParseType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$7[SqlParser.ParseType.SELECT_LIST.ordinal()] = 1;
        SqlParser$WhenMappings.$EnumSwitchMapping$7[SqlParser.ParseType.SELECT_VALUE.ordinal()] = 2;
        SqlParser$WhenMappings.$EnumSwitchMapping$7[SqlParser.ParseType.PIVOT.ordinal()] = 3;
        $EnumSwitchMapping$8 = new int[SqlParser.ParseType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$8[SqlParser.ParseType.GROUP.ordinal()] = 1;
        $EnumSwitchMapping$9 = new int[SqlParser.ParseType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.ATOM.ordinal()] = 1;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.LIST.ordinal()] = 2;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.BAG.ordinal()] = 3;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.STRUCT.ordinal()] = 4;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.UNARY.ordinal()] = 5;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.BINARY.ordinal()] = 6;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.TERNARY.ordinal()] = 7;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.CAST.ordinal()] = 8;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.CALL.ordinal()] = 9;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.EXEC.ordinal()] = 10;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.CALL_AGG.ordinal()] = 11;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.CALL_DISTINCT_AGG.ordinal()] = 12;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.CALL_AGG_WILDCARD.ordinal()] = 13;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.PATH.ordinal()] = 14;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.PARAMETER.ordinal()] = 15;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.CASE.ordinal()] = 16;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.FROM.ordinal()] = 17;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.INSERT.ordinal()] = 18;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.INSERT_VALUE.ordinal()] = 19;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.SET.ordinal()] = 20;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.UPDATE.ordinal()] = 21;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.REMOVE.ordinal()] = 22;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.DELETE.ordinal()] = 23;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.DML_LIST.ordinal()] = 24;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.SELECT_LIST.ordinal()] = 25;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.SELECT_VALUE.ordinal()] = 26;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.PIVOT.ordinal()] = 27;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.CREATE_TABLE.ordinal()] = 28;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.DROP_TABLE.ordinal()] = 29;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.CREATE_INDEX.ordinal()] = 30;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.DROP_INDEX.ordinal()] = 31;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.DATE.ordinal()] = 32;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.TIME.ordinal()] = 33;
        SqlParser$WhenMappings.$EnumSwitchMapping$9[SqlParser.ParseType.TIME_WITH_TIME_ZONE.ordinal()] = 34;
        $EnumSwitchMapping$10 = new int[SqlParser.ParseType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$10[SqlParser.ParseType.INSERT.ordinal()] = 1;
        SqlParser$WhenMappings.$EnumSwitchMapping$10[SqlParser.ParseType.INSERT_VALUE.ordinal()] = 2;
        SqlParser$WhenMappings.$EnumSwitchMapping$10[SqlParser.ParseType.SET.ordinal()] = 3;
        SqlParser$WhenMappings.$EnumSwitchMapping$10[SqlParser.ParseType.UPDATE.ordinal()] = 4;
        SqlParser$WhenMappings.$EnumSwitchMapping$10[SqlParser.ParseType.REMOVE.ordinal()] = 5;
        SqlParser$WhenMappings.$EnumSwitchMapping$10[SqlParser.ParseType.DELETE.ordinal()] = 6;
        $EnumSwitchMapping$11 = new int[SqlParser.ParseType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$11[SqlParser.ParseType.INSERT.ordinal()] = 1;
        SqlParser$WhenMappings.$EnumSwitchMapping$11[SqlParser.ParseType.INSERT_VALUE.ordinal()] = 2;
        $EnumSwitchMapping$12 = new int[SqlParser.ParseType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$12[SqlParser.ParseType.PROJECT_ALL.ordinal()] = 1;
        $EnumSwitchMapping$13 = new int[SqlParser.ParseType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$13[SqlParser.ParseType.AS_ALIAS.ordinal()] = 1;
        SqlParser$WhenMappings.$EnumSwitchMapping$13[SqlParser.ParseType.AT_ALIAS.ordinal()] = 2;
        SqlParser$WhenMappings.$EnumSwitchMapping$13[SqlParser.ParseType.BY_ALIAS.ordinal()] = 3;
        $EnumSwitchMapping$14 = new int[SqlParser.ParseType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$14[SqlParser.ParseType.UNPIVOT.ordinal()] = 1;
        $EnumSwitchMapping$15 = new int[TokenType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$15[TokenType.ASC.ordinal()] = 1;
        SqlParser$WhenMappings.$EnumSwitchMapping$15[TokenType.DESC.ordinal()] = 2;
        $EnumSwitchMapping$16 = new int[SqlParser.ParseType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$16[SqlParser.ParseType.RETURNING_WILDCARD.ordinal()] = 1;
        $EnumSwitchMapping$17 = new int[TokenType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$17[TokenType.QUOTED_IDENTIFIER.ordinal()] = 1;
        SqlParser$WhenMappings.$EnumSwitchMapping$17[TokenType.IDENTIFIER.ordinal()] = 2;
        $EnumSwitchMapping$18 = new int[SqlParser.PathMode.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$18[SqlParser.PathMode.FULL_PATH.ordinal()] = 1;
        SqlParser$WhenMappings.$EnumSwitchMapping$18[SqlParser.PathMode.SIMPLE_PATH.ordinal()] = 2;
        $EnumSwitchMapping$19 = new int[TokenType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$19[TokenType.IDENTIFIER.ordinal()] = 1;
        SqlParser$WhenMappings.$EnumSwitchMapping$19[TokenType.QUOTED_IDENTIFIER.ordinal()] = 2;
        SqlParser$WhenMappings.$EnumSwitchMapping$19[TokenType.STAR.ordinal()] = 3;
        $EnumSwitchMapping$20 = new int[TokenType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$20[TokenType.STAR.ordinal()] = 1;
        $EnumSwitchMapping$21 = new int[TokenType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$21[TokenType.DOT.ordinal()] = 1;
        SqlParser$WhenMappings.$EnumSwitchMapping$21[TokenType.LEFT_BRACKET.ordinal()] = 2;
        $EnumSwitchMapping$22 = new int[TokenType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$22[TokenType.IDENTIFIER.ordinal()] = 1;
        SqlParser$WhenMappings.$EnumSwitchMapping$22[TokenType.QUOTED_IDENTIFIER.ordinal()] = 2;
        $EnumSwitchMapping$23 = new int[TokenType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$23[TokenType.LEFT_PAREN.ordinal()] = 1;
        $EnumSwitchMapping$24 = new int[TokenType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$24[TokenType.RIGHT_BRACKET.ordinal()] = 1;
        $EnumSwitchMapping$25 = new int[TokenType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$25[TokenType.RIGHT_DOUBLE_ANGLE_BRACKET.ordinal()] = 1;
        $EnumSwitchMapping$26 = new int[TokenType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$26[TokenType.RIGHT_CURLY.ordinal()] = 1;
        $EnumSwitchMapping$27 = new int[TokenType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$27[TokenType.LEFT_PAREN.ordinal()] = 1;
        $EnumSwitchMapping$28 = new int[TokenType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$28[TokenType.OPERATOR.ordinal()] = 1;
        SqlParser$WhenMappings.$EnumSwitchMapping$28[TokenType.KEYWORD.ordinal()] = 2;
        SqlParser$WhenMappings.$EnumSwitchMapping$28[TokenType.LEFT_PAREN.ordinal()] = 3;
        SqlParser$WhenMappings.$EnumSwitchMapping$28[TokenType.LEFT_BRACKET.ordinal()] = 4;
        SqlParser$WhenMappings.$EnumSwitchMapping$28[TokenType.LEFT_DOUBLE_ANGLE_BRACKET.ordinal()] = 5;
        SqlParser$WhenMappings.$EnumSwitchMapping$28[TokenType.LEFT_CURLY.ordinal()] = 6;
        SqlParser$WhenMappings.$EnumSwitchMapping$28[TokenType.IDENTIFIER.ordinal()] = 7;
        SqlParser$WhenMappings.$EnumSwitchMapping$28[TokenType.QUOTED_IDENTIFIER.ordinal()] = 8;
        SqlParser$WhenMappings.$EnumSwitchMapping$28[TokenType.QUESTION_MARK.ordinal()] = 9;
        SqlParser$WhenMappings.$EnumSwitchMapping$28[TokenType.ION_LITERAL.ordinal()] = 10;
        SqlParser$WhenMappings.$EnumSwitchMapping$28[TokenType.LITERAL.ordinal()] = 11;
        SqlParser$WhenMappings.$EnumSwitchMapping$28[TokenType.NULL.ordinal()] = 12;
        SqlParser$WhenMappings.$EnumSwitchMapping$28[TokenType.MISSING.ordinal()] = 13;
        SqlParser$WhenMappings.$EnumSwitchMapping$28[TokenType.TRIM_SPECIFICATION.ordinal()] = 14;
        $EnumSwitchMapping$29 = new int[TokenType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$29[TokenType.LEFT_PAREN.ordinal()] = 1;
        $EnumSwitchMapping$30 = new int[SqlParser.ParseType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$30[SqlParser.ParseType.PATH.ordinal()] = 1;
        SqlParser$WhenMappings.$EnumSwitchMapping$30[SqlParser.ParseType.ATOM.ordinal()] = 2;
        $EnumSwitchMapping$31 = new int[TokenType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$31[TokenType.STAR.ordinal()] = 1;
        $EnumSwitchMapping$32 = new int[TokenType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$32[TokenType.QUOTED_IDENTIFIER.ordinal()] = 1;
        SqlParser$WhenMappings.$EnumSwitchMapping$32[TokenType.IDENTIFIER.ordinal()] = 2;
        $EnumSwitchMapping$33 = new int[TokenType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$33[TokenType.IDENTIFIER.ordinal()] = 1;
        SqlParser$WhenMappings.$EnumSwitchMapping$33[TokenType.QUOTED_IDENTIFIER.ordinal()] = 2;
        $EnumSwitchMapping$34 = new int[TokenType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$34[TokenType.QUOTED_IDENTIFIER.ordinal()] = 1;
        SqlParser$WhenMappings.$EnumSwitchMapping$34[TokenType.IDENTIFIER.ordinal()] = 2;
        $EnumSwitchMapping$35 = new int[TokenType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$35[TokenType.QUOTED_IDENTIFIER.ordinal()] = 1;
        SqlParser$WhenMappings.$EnumSwitchMapping$35[TokenType.IDENTIFIER.ordinal()] = 2;
        $EnumSwitchMapping$36 = new int[TokenType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$36[TokenType.QUOTED_IDENTIFIER.ordinal()] = 1;
        SqlParser$WhenMappings.$EnumSwitchMapping$36[TokenType.IDENTIFIER.ordinal()] = 2;
        $EnumSwitchMapping$37 = new int[SqlParser.ParseType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$37[SqlParser.ParseType.PATH.ordinal()] = 1;
        $EnumSwitchMapping$38 = new int[TokenType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$38[TokenType.STAR.ordinal()] = 1;
        SqlParser$WhenMappings.$EnumSwitchMapping$38[TokenType.RIGHT_PAREN.ordinal()] = 2;
        $EnumSwitchMapping$39 = new int[TokenType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$39[TokenType.STAR.ordinal()] = 1;
        $EnumSwitchMapping$40 = new int[TokenType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$40[TokenType.STAR.ordinal()] = 1;
        $EnumSwitchMapping$41 = new int[TokenType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$41[TokenType.COMMA.ordinal()] = 1;
        $EnumSwitchMapping$42 = new int[TokenType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$42[TokenType.COMMA.ordinal()] = 1;
        SqlParser$WhenMappings.$EnumSwitchMapping$42[TokenType.KEYWORD.ordinal()] = 2;
        $EnumSwitchMapping$43 = new int[TokenType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$43[TokenType.ASC.ordinal()] = 1;
        SqlParser$WhenMappings.$EnumSwitchMapping$43[TokenType.DESC.ordinal()] = 2;
        $EnumSwitchMapping$44 = new int[SqlParser.ArgListMode.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$44[SqlParser.ArgListMode.STRUCT_LITERAL_ARG_LIST.ordinal()] = 1;
        SqlParser$WhenMappings.$EnumSwitchMapping$44[SqlParser.ArgListMode.SIMPLE_PATH_ARG_LIST.ordinal()] = 2;
        SqlParser$WhenMappings.$EnumSwitchMapping$44[SqlParser.ArgListMode.SET_CLAUSE_ARG_LIST.ordinal()] = 3;
        SqlParser$WhenMappings.$EnumSwitchMapping$44[SqlParser.ArgListMode.NORMAL_ARG_LIST.ordinal()] = 4;
        $EnumSwitchMapping$45 = new int[TokenType.values().length];
        SqlParser$WhenMappings.$EnumSwitchMapping$45[TokenType.SEMICOLON.ordinal()] = 1;
    }
}

